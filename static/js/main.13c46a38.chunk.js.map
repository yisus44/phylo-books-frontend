{"version":3,"sources":["page/SingleProduct.js","components/navbar/NavBar.js","components/item-form/ItemForm.js","components/item-container/ItemContainer.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ext","SingleProduct","props","useState","loading","setLoading","stripe","useStripe","elements","useElements","e","a","preventDefault","createPaymentMethod","type","card","getElement","CardElement","error","paymentMethod","id","axios","post","amount","data","price","response","status","alert","clear","console","log","match","params","useFetch","isLoading","className","src","image","alt","name","style","textAlign","description","category","to","onClick","disabled","role","NavBar","class","href","ItemForm","extraContent","mainContent","product","readMore","setReadMore","length","substring","maxWidth","_id","ItemContainer","map","Footer","stripePromise","loadStripe","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13c46a38.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport useFetch from 'react-fetch-hook';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nconst ext = 'https://flores-phylo-books.herokuapp.com';\r\nexport function SingleProduct(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  async function onClick(e) {\r\n    e.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    setLoading(true);\r\n\r\n    if (!error) {\r\n      const { id } = paymentMethod;\r\n      try {\r\n        const response = await axios.post(ext + '/api/checkout', {\r\n          id,\r\n          amount: data.price * 1000, //cents\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          alert('Your payment has been successful');\r\n        } else if (response.status === 500) {\r\n          alert('Something went wrong, try again later');\r\n        }\r\n        elements.getElement(CardElement).clear();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const id = props.match.params.id;\r\n  const { isLoading, data } = useFetch(ext + '/api/products/' + id);\r\n  if (data) {\r\n    console.log(data);\r\n    return (\r\n      <div className=\"container p-1\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <img src={data.image} alt={data.name}></img>\r\n          </div>\r\n\r\n          <div className=\"col-sm p-3 \">\r\n            <br />\r\n            <br />\r\n            <div className=\"border\">\r\n              <h2>{data.name}</h2>\r\n              <p className=\"card-text\" style={{ textAlign: 'justify' }}>\r\n                {data.description}\r\n              </p>\r\n              <p className=\"text-success\">Price:{data.price}$</p>\r\n              <p className=\"text-success\">Available in stock</p>\r\n              <p>Category:{data.category}</p>\r\n\r\n              <Link to=\"/\">\r\n                <button type=\"button\" className=\"btn btn-info center\">\r\n                  Go back!\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <br />\r\n            <div className=\"border\">\r\n              <p>Your payment info</p>\r\n              <CardElement />\r\n              <br />\r\n              <button\r\n                className=\"btn btn-success\"\r\n                onClick={onClick}\r\n                disabled={!stripe}\r\n              >\r\n                {loading ? (\r\n                  <div className=\"spinner-border text-light\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                ) : (\r\n                  'Buy'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <p>Loading</p>;\r\n  }\r\n  return <div></div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport function NavBar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/\">\r\n          Phylo-books\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n//\r\n//\r\n","import 'bootswatch/dist/sketchy/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function ItemForm({ product }) {\r\n  const [readMore, setReadMore] = useState(false);\r\n  let extraContent;\r\n  let mainContent;\r\n\r\n  if (product.description.length > 140) {\r\n    console.log(extraContent);\r\n    mainContent = product.description.substring(0, 140);\r\n    extraContent = product.description.substring(\r\n      140,\r\n      product.description.length\r\n    );\r\n  } else {\r\n    mainContent = product.description;\r\n    extraContent = '';\r\n  }\r\n\r\n  return (\r\n    <div className=\"card bg-light mb-1 m-1\" style={{ maxWidth: '18rem' }}>\r\n      <div className=\"card-header\">{product.category}</div>\r\n      <div className=\"card-body\">\r\n        <Link to={`/products/${product._id}`}>\r\n          <h3 className=\"card-title text-info\">{product.name}</h3>\r\n        </Link>\r\n        <h4>Price:{product.price}</h4>\r\n        <p className=\"card-text\">\r\n          {mainContent}\r\n          {!readMore && product.description.length > 140 && (\r\n            <p\r\n              class=\"text-info\"\r\n              onClick={() => {\r\n                setReadMore(!readMore);\r\n              }}\r\n            >\r\n              Read More...\r\n            </p>\r\n          )}\r\n          {readMore && extraContent}\r\n        </p>\r\n        <Link to={`/products/${product._id}`}>\r\n          <button type=\"button\" class=\"btn btn-info\">\r\n            Shop now!\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// <form className=\"card card-body\">\r\n//   <img className=\"img-fluid\" alt={product.name} src={product.image}></img>\r\n//   <h3 className=\"text-center\">$</h3>\r\n//   <div className=\"form-group\"></div>\r\n\r\n//   <button className=\"btn btn-success\">Buy now!</button>\r\n// </form>;\r\n","import useFetch from 'react-fetch-hook';\r\nimport { ItemForm } from '../item-form/ItemForm';\r\n\r\nconst ext = 'https://flores-phylo-books.herokuapp.com';\r\n\r\nexport function ItemContainer() {\r\n  const { isLoading, data } = useFetch(ext + '/api/products');\r\n  if (data) {\r\n    return (\r\n      <div className=\"container p-4\">\r\n        <div className=\"row\">\r\n          <h1>E-commerce app</h1>\r\n          {data.map((product) => {\r\n            return <ItemForm key={product._id} product={product} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <p>Loading</p>;\r\n  }\r\n  return <div></div>;\r\n}\r\n","import React from 'react';\r\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\r\nexport function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <br />\r\n\r\n      <p style={{ textAlign: 'center' }}>\r\n        <small>\r\n          <strong>\r\n            Project mainly developed and updated by Jesus Adrian Flores Arevalo\r\n            using Express, Node,React and MongoDB\r\n            <br />\r\n            Here you can find code for the\r\n            <a href=\"https://github.com/yisus44/phylo-books-frontend\">\r\n              {' '}\r\n              frontend{' '}\r\n            </a>\r\n            and for the\r\n            <a href=\"https://github.com/yisus44/phylo-books\"> backend.</a>{' '}\r\n          </strong>\r\n        </small>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import 'bootswatch/dist/litera/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { SingleProduct } from './page/SingleProduct';\nimport './App.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\n\nimport { NavBar } from './components/navbar/NavBar';\nimport { ItemContainer } from './components/item-container/ItemContainer';\nimport { Footer } from './components/footer/Footer';\n\nconst stripePromise = loadStripe(\n  'pk_test_51IQHtaIhuPxmQvYnZmMgskzbSXVYycj8njBkZY18LrMxiGmwKUfdm8NqWvbY4MUaPr8veRvBfE37VStBKgIWnjon00eJMvZrrl'\n);\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Elements stripe={stripePromise}>\n          <Route exact path=\"/\" component={ItemContainer}></Route>\n          <Route exact path=\"/products/:id\" component={SingleProduct}></Route>\n        </Elements>\n\n        <Footer />\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}